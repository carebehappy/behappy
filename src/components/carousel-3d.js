// src/components/carousel-3d.js
// 3D –ö–∞—Ä—É—Å–µ–ª—å —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ BEHAPPY
window.Carousel3D = {
    carousel: null,
    isInitialized: false,
    
    init: async function() {
        if (this.isInitialized) return;

        const carouselSection = document.getElementById('carousel-3d-section');
        if (!carouselSection) {
            console.warn('–°–µ–∫—Ü–∏—è carousel-3d-section –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }

        // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫—É GSAP
        const gsap = await window.GSAPLoader.load();
        if (!gsap) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å GSAP –¥–ª—è 3D –∫–∞—Ä—É—Å–µ–ª–∏');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ HTML
        const carousel3DContainer = carouselSection.querySelector('.carousel-3d-container');
        if (!carousel3DContainer) {
            console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä .carousel-3d-container –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ HTML');
            return;
        }

        this.initCarousel(carouselSection);
        this.isInitialized = true;

        console.log('üöÄ 3D –ö–∞—Ä—É—Å–µ–ª—å BEHAPPY –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    },
    
    initCarousel: function(section) {
        // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏ panoram - –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–µ —Ñ–æ—Ç–æ –ø–∞–Ω—Å–∏–æ–Ω–∞—Ç–∞
        const basePath = "./images/panoram/";
        const imageFiles = [
            "dining68.png",    // –°—Ç–æ–ª–æ–≤–∞—è
            "gym68.png",       // –°–ø–æ—Ä—Ç–∑–∞–ª
            "house68.png",     // –û–±—â–∏–π –≤–∏–¥ –¥–æ–º–∞
            "room68.png",      // –ö–æ–º–Ω–∞—Ç–∞
            "swinpool68.png",  // –ë–∞—Å—Å–µ–π–Ω
            "ter68.png",       // –¢–µ—Ä—Ä–∞—Å–∞ 1
            "ter68-2.png"      // –¢–µ—Ä—Ä–∞—Å–∞ 2
        ];

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
        const BASE_SPEED = 0.11;          // –ë–∞–∑–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è
        const DECAY = 0.008;              // –°–∫–æ—Ä–æ—Å—Ç—å –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∫ –±–∞–∑–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
        const WHEEL_K = 0.004;            // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–ª–∏—è–Ω–∏—è –∫–æ–ª–µ—Å–∞ –º—ã—à–∏
        const SCROLL_K = 0.0002;          // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–ª–∏—è–Ω–∏—è —Å–∫—Ä–æ–ª–ª–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const SPEED_CLAMP = 0.6;          // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
        
        // –ü–∞–Ω–æ—Ä–∞–º–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        const PANO_BOOST = 0.05;          // –°–∏–ª–∞ –ø–∞–Ω–æ—Ä–∞–º–Ω–æ–≥–æ —Å–º–µ—â–µ–Ω–∏—è
        const PANO_SIZE = 0.05;           // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç–µ

        const ringEl = document.getElementById('carousel-3d-ring');
        if (!ringEl) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç carousel-3d-ring –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        let panels = [];
        let curRot = 0;
        let speed = BASE_SPEED;
        let targetSpeed = BASE_SPEED;
        let baseDirection = -1;           // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—â–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        let lastScrollY = window.scrollY;
        let isScrolling = false;
        let lastScrollTime = Date.now();

        const buildPanels = () => {
            ringEl.innerHTML = '';
            panels = imageFiles.map((file) => {
                const panel = document.createElement('div');
                panel.className = 'carousel-3d-panel';
                panel.style.backgroundImage = `url("${basePath}${file}")`;
                
                // –î–æ–±–∞–≤–ª—è–µ–º alt-—Ç–µ–∫—Å—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ data-–∞—Ç—Ä–∏–±—É—Ç
                const altTexts = {
                    "dining68.png": "–°—Ç–æ–ª–æ–≤–∞—è –ø–∞–Ω—Å–∏–æ–Ω–∞—Ç—É",
                    "gym68.png": "–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∑–∞–ª",
                    "house68.png": "–ó–∞–≥–∞–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –±—É–¥–∏–Ω–∫—É",
                    "room68.png": "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞ –∫—ñ–º–Ω–∞—Ç–∞",
                    "swinpool68.png": "–ë–∞—Å–µ–π–Ω –¥–ª—è —Ä–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—ó",
                    "ter68.png": "–¢–µ—Ä–∞—Å–∞ –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É",
                    "ter68-2.png": "–¢–µ—Ä–∞—Å–∞ –∑ –≤–∏–¥–æ–º –Ω–∞ —Å–∞–¥"
                };
                
                panel.setAttribute('data-alt', altTexts[file] || '–§–æ—Ç–æ –ø–∞–Ω—Å–∏–æ–Ω–∞—Ç—É');
                ringEl.appendChild(panel);
                return panel;
            });
            layoutRing();
        };

        const layoutRing = () => {
            const n = panels.length;
            if (!n) return;
            
            const step = 360 / n;
            const isMobile = window.innerWidth <= 720;
            const screenWidth = window.innerWidth;
            
            // –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞
            // const radius = isMobile ? 300 : Math.round(screenWidth * 0.25);
            const radius = isMobile ? 400 : Math.round(screenWidth * 0.45);
            
            panels.forEach((el, idx) => {
                const angle = idx * step;
                el.style.transform = `rotateY(${angle}deg) translateZ(${radius}px) rotateY(180deg)`;
            });
            
            ringEl.dataset.step = step;
        };

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –∫–æ–ª–µ—Å–æ–º –º—ã—à–∏
        const handleWheel = (event) => {
            event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–∫—Ä–æ–ª–ª
            
            const scrollDelta = event.deltaY || (event.detail * -40) || 0;
            
            if (scrollDelta > 0) {
                baseDirection = -1;
                const impulse = Math.min(Math.abs(scrollDelta) * WHEEL_K, 0.1);
                targetSpeed = clamp(targetSpeed + impulse, -SPEED_CLAMP, SPEED_CLAMP);
            } else if (scrollDelta < 0) {
                baseDirection = 1;
                const impulse = Math.min(Math.abs(scrollDelta) * WHEEL_K, 0.1);
                targetSpeed = clamp(targetSpeed + impulse, -SPEED_CLAMP, SPEED_CLAMP);
            }
            
            lastScrollTime = Date.now();
            isScrolling = true;
        };

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const handleScroll = () => {
            const currentScrollY = window.scrollY;
            const scrollDiff = currentScrollY - lastScrollY;
            
            if (Math.abs(scrollDiff) > 3) {
                if (scrollDiff > 0) {
                    baseDirection = -1;
                    const impulse = Math.min(Math.abs(scrollDiff) * SCROLL_K, 0.05);
                    targetSpeed = clamp(targetSpeed + impulse, -SPEED_CLAMP, SPEED_CLAMP);
                } else {
                    baseDirection = 1;
                    const impulse = Math.min(Math.abs(scrollDiff) * SCROLL_K, 0.05);
                    targetSpeed = clamp(targetSpeed + impulse, -SPEED_CLAMP, SPEED_CLAMP);
                }
                
                lastScrollTime = Date.now();
                isScrolling = true;
            }
            
            lastScrollY = currentScrollY;
        };

        // –ü–∞–Ω–æ—Ä–∞–º–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç - –∏–º–∏—Ç–∞—Ü–∏—è –ø–æ–≤–æ—Ä–æ—Ç–∞ –≥–æ–ª–æ–≤—ã
        const applyPanorama = () => {
            const n = panels.length;
            if (!n) return;
            
            const step = parseFloat(ringEl.dataset.step) || (360 / n);
            
            for (let i = 0; i < n; i++) {
                const el = panels[i];
                const panelAngle = i * step;
                let a = normalizeAngle(panelAngle + curRot + 180);
                if (a > 180) a -= 360;
                
                const t = Math.min(1, Math.abs(a) / 90);
                const shift = (a / 180) * PANO_BOOST * 100;
                const sizeBoost = 100 + (t * PANO_SIZE * 100);
                
                el.style.backgroundPosition = `${50 + shift}% 50%`;
                el.style.backgroundSize = `${sizeBoost}% auto`;
            }
        };

        // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —É–≥–ª–∞
        const normalizeAngle = (deg) => {
            let x = deg % 360;
            if (x < 0) x += 360;
            return x;
        };

        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        const clamp = (v, a, b) => {
            return Math.max(a, Math.min(b, v));
        };

        // –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –∞–Ω–∏–º–∞—Ü–∏–∏ —Å GSAP
        window.gsap.ticker.add(() => {
            // –ü–ª–∞–≤–Ω–æ–µ —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
            speed += (targetSpeed - speed) * 0.12;
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ—Ç–∞—Ü–∏–∏
            curRot += speed * baseDirection;
            
            // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫ –∫–æ–ª—å—Ü—É
            ringEl.style.transform = `rotateY(${curRot}deg)`;
            
            // –ü–∞–Ω–æ—Ä–∞–º–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
            applyPanorama();
            
            // –õ–æ–≥–∏–∫–∞ –∑–∞—Ç—É—Ö–∞–Ω–∏—è –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞
            if (isScrolling) {
                const timeSinceScroll = Date.now() - lastScrollTime;
                if (timeSinceScroll > 150) {
                    isScrolling = false;
                }
            }
            
            // –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –±–∞–∑–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
            if (!isScrolling) {
                const target = BASE_SPEED * Math.sign(targetSpeed || 1);
                targetSpeed += (target - targetSpeed) * DECAY;
                
                // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
                if (Math.abs(targetSpeed) < BASE_SPEED * 0.8) {
                    targetSpeed = BASE_SPEED * Math.sign(targetSpeed || 1);
                }
            }
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–Ω–µ–ª–µ–π
        buildPanels();
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        const carouselStage = section.querySelector('.carousel-3d-stage');
        if (carouselStage) {
            // carouselStage.addEventListener('wheel', handleWheel, { passive: false });
            carouselStage.addEventListener('wheel', handleWheel, { passive: true });
        }
        
        window.addEventListener('scroll', handleScroll, { passive: true });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        let resizeTimer = null;
        const handleResize = () => {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(() => {
                layoutRing();
                applyPanorama();
            }, 120);
        };
        
        window.addEventListener('resize', handleResize, { passive: true });

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –¥–ª—è cleanup
        this.carousel = {
            destroy: () => {
                if (carouselStage) {
                    carouselStage.removeEventListener('wheel', handleWheel);
                }
                window.removeEventListener('scroll', handleScroll);
                window.removeEventListener('resize', handleResize);
            }
        };
    },
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    destroy: function() {
        if (this.carousel && this.carousel.destroy) {
            this.carousel.destroy();
        }
        
        this.isInitialized = false;
        console.log('3D –ö–∞—Ä—É—Å–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
    }
};